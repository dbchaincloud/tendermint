// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: proto/p2p/pex_msgs.proto

package p2p

import (
	fmt "fmt"
	_ "github.com/gogo/protobuf/gogoproto"
	proto "github.com/gogo/protobuf/proto"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.GoGoProtoPackageIsVersion3 // please upgrade the proto package

type PexRequest struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *PexRequest) Reset()         { *m = PexRequest{} }
func (m *PexRequest) String() string { return proto.CompactTextString(m) }
func (*PexRequest) ProtoMessage()    {}
func (*PexRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_b4d6fe6b009e47d8, []int{0}
}
func (m *PexRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PexRequest.Unmarshal(m, b)
}
func (m *PexRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PexRequest.Marshal(b, m, deterministic)
}
func (m *PexRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PexRequest.Merge(m, src)
}
func (m *PexRequest) XXX_Size() int {
	return xxx_messageInfo_PexRequest.Size(m)
}
func (m *PexRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_PexRequest.DiscardUnknown(m)
}

var xxx_messageInfo_PexRequest proto.InternalMessageInfo

type PexAddrs struct {
	Addrs                []NetAddress `protobuf:"bytes,1,rep,name=addrs,proto3" json:"addrs"`
	XXX_NoUnkeyedLiteral struct{}     `json:"-"`
	XXX_unrecognized     []byte       `json:"-"`
	XXX_sizecache        int32        `json:"-"`
}

func (m *PexAddrs) Reset()         { *m = PexAddrs{} }
func (m *PexAddrs) String() string { return proto.CompactTextString(m) }
func (*PexAddrs) ProtoMessage()    {}
func (*PexAddrs) Descriptor() ([]byte, []int) {
	return fileDescriptor_b4d6fe6b009e47d8, []int{1}
}
func (m *PexAddrs) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PexAddrs.Unmarshal(m, b)
}
func (m *PexAddrs) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PexAddrs.Marshal(b, m, deterministic)
}
func (m *PexAddrs) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PexAddrs.Merge(m, src)
}
func (m *PexAddrs) XXX_Size() int {
	return xxx_messageInfo_PexAddrs.Size(m)
}
func (m *PexAddrs) XXX_DiscardUnknown() {
	xxx_messageInfo_PexAddrs.DiscardUnknown(m)
}

var xxx_messageInfo_PexAddrs proto.InternalMessageInfo

func (m *PexAddrs) GetAddrs() []NetAddress {
	if m != nil {
		return m.Addrs
	}
	return nil
}

type Message struct {
	// Types that are valid to be assigned to Sum:
	//	*Message_PexRequest
	//	*Message_PexAddrs
	Sum                  isMessage_Sum `protobuf_oneof:"sum"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *Message) Reset()         { *m = Message{} }
func (m *Message) String() string { return proto.CompactTextString(m) }
func (*Message) ProtoMessage()    {}
func (*Message) Descriptor() ([]byte, []int) {
	return fileDescriptor_b4d6fe6b009e47d8, []int{2}
}
func (m *Message) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Message.Unmarshal(m, b)
}
func (m *Message) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Message.Marshal(b, m, deterministic)
}
func (m *Message) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Message.Merge(m, src)
}
func (m *Message) XXX_Size() int {
	return xxx_messageInfo_Message.Size(m)
}
func (m *Message) XXX_DiscardUnknown() {
	xxx_messageInfo_Message.DiscardUnknown(m)
}

var xxx_messageInfo_Message proto.InternalMessageInfo

type isMessage_Sum interface {
	isMessage_Sum()
}

type Message_PexRequest struct {
	PexRequest *PexRequest `protobuf:"bytes,1,opt,name=pex_request,json=pexRequest,proto3,oneof" json:"pex_request,omitempty"`
}
type Message_PexAddrs struct {
	PexAddrs *PexAddrs `protobuf:"bytes,2,opt,name=pex_addrs,json=pexAddrs,proto3,oneof" json:"pex_addrs,omitempty"`
}

func (*Message_PexRequest) isMessage_Sum() {}
func (*Message_PexAddrs) isMessage_Sum()   {}

func (m *Message) GetSum() isMessage_Sum {
	if m != nil {
		return m.Sum
	}
	return nil
}

func (m *Message) GetPexRequest() *PexRequest {
	if x, ok := m.GetSum().(*Message_PexRequest); ok {
		return x.PexRequest
	}
	return nil
}

func (m *Message) GetPexAddrs() *PexAddrs {
	if x, ok := m.GetSum().(*Message_PexAddrs); ok {
		return x.PexAddrs
	}
	return nil
}

// XXX_OneofWrappers is for the internal use of the proto package.
func (*Message) XXX_OneofWrappers() []interface{} {
	return []interface{}{
		(*Message_PexRequest)(nil),
		(*Message_PexAddrs)(nil),
	}
}

func init() {
	proto.RegisterType((*PexRequest)(nil), "tendermint.proto.p2p.PexRequest")
	proto.RegisterType((*PexAddrs)(nil), "tendermint.proto.p2p.PexAddrs")
	proto.RegisterType((*Message)(nil), "tendermint.proto.p2p.Message")
}

func init() { proto.RegisterFile("proto/p2p/pex_msgs.proto", fileDescriptor_b4d6fe6b009e47d8) }

var fileDescriptor_b4d6fe6b009e47d8 = []byte{
	// 264 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x74, 0x90, 0xbf, 0x4e, 0xc3, 0x30,
	0x10, 0x87, 0x1b, 0x4a, 0xa1, 0x5c, 0x99, 0x22, 0x90, 0xa2, 0x0e, 0x10, 0x65, 0x40, 0x0c, 0xc8,
	0x96, 0xc2, 0x0a, 0x03, 0x61, 0xc9, 0x02, 0xaa, 0x32, 0xb2, 0x54, 0x49, 0x7c, 0x72, 0x22, 0x91,
	0xf8, 0xb0, 0x1d, 0x29, 0x7d, 0x0f, 0x1e, 0x8a, 0xa7, 0xe0, 0x59, 0x50, 0xe2, 0xaa, 0x59, 0xe8,
	0xf6, 0xf3, 0xe9, 0xf3, 0x77, 0x7f, 0x20, 0x20, 0xad, 0xac, 0xe2, 0x14, 0x13, 0x27, 0xec, 0xb7,
	0x8d, 0x91, 0x86, 0x8d, 0x25, 0xff, 0xca, 0x62, 0x2b, 0x50, 0x37, 0x75, 0x6b, 0x5d, 0x85, 0x51,
	0x4c, 0xeb, 0xeb, 0x89, 0xb7, 0x3b, 0xc2, 0x3d, 0xbc, 0xbe, 0xb3, 0x55, 0xad, 0xc5, 0x96, 0x72,
	0x6d, 0x77, 0xdc, 0x21, 0x52, 0x49, 0x35, 0x25, 0xc7, 0x45, 0x97, 0x00, 0x1b, 0xec, 0x33, 0xfc,
	0xea, 0xd0, 0xd8, 0x28, 0x85, 0xe5, 0x06, 0xfb, 0x17, 0x21, 0xb4, 0xf1, 0x9f, 0x60, 0x91, 0x0f,
	0x21, 0xf0, 0xc2, 0xf9, 0xfd, 0x2a, 0x0e, 0xd9, 0x7f, 0xed, 0xd9, 0x3b, 0xda, 0x01, 0x47, 0x63,
	0x92, 0xd3, 0x9f, 0xdf, 0xdb, 0x59, 0xe6, 0x3e, 0x45, 0xdf, 0x1e, 0x9c, 0xbf, 0xa1, 0x31, 0xb9,
	0x44, 0xff, 0x15, 0x56, 0xc3, 0x2a, 0xda, 0x35, 0x09, 0xbc, 0xd0, 0x3b, 0xee, 0x9b, 0x86, 0x49,
	0x67, 0x19, 0xd0, 0xe1, 0xe5, 0x3f, 0xc3, 0xc5, 0x20, 0x71, 0x23, 0x9d, 0x8c, 0x8a, 0x9b, 0xa3,
	0x8a, 0x71, 0x83, 0x74, 0x96, 0x2d, 0x69, 0x9f, 0x93, 0x05, 0xcc, 0x4d, 0xd7, 0x24, 0xec, 0xe3,
	0x41, 0xd6, 0xb6, 0xea, 0x0a, 0x56, 0xaa, 0x86, 0x8b, 0xa2, 0xac, 0xf2, 0xba, 0x2d, 0x3f, 0x55,
	0x27, 0xf8, 0xe4, 0xe2, 0x87, 0x93, 0x16, 0x67, 0x63, 0x7c, 0xfc, 0x0b, 0x00, 0x00, 0xff, 0xff,
	0x22, 0x9c, 0x87, 0xbf, 0x96, 0x01, 0x00, 0x00,
}
